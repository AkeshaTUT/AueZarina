"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å SteamDB –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —Ü–µ–Ω–∞—Ö
"""
import asyncio
from price_chart_generator import generate_price_chart, extract_game_id_from_url, PriceChartGenerator

async def test_steamdb_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å SteamDB"""
    
    test_cases = [
        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ ID
        ("Counter-Strike 2", "730"),
        ("Cyberpunk 2077", "1091500"),
        ("The Witcher 3", "292030"),
        ("Dota 2", "570"),
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å SteamDB")
    print("=" * 60)
    
    generator = PriceChartGenerator()
    
    for game_name, app_id in test_cases:
        print(f"\nüéÆ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {game_name} (ID: {app_id})")
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            real_data = await generator.get_real_price_data(app_id)
            
            if real_data:
                print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(real_data)} —Ç–æ—á–µ–∫ —Å SteamDB")
                print(f"   üìÖ –ü–µ—Ä–∏–æ–¥: {real_data[0]['date'].strftime('%d.%m.%Y')} - {real_data[-1]['date'].strftime('%d.%m.%Y')}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–µ–Ω
                recent_prices = real_data[-3:]
                print(f"   üí∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–µ–Ω—ã:")
                for price_point in recent_prices:
                    price_rub = price_point['price'] / 100
                    print(f"      {price_point['date'].strftime('%d.%m.%Y')}: {price_rub:.0f}‚ÇΩ")
                
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å SteamDB")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Å URL")
    
    # –¢–µ—Å—Ç —Å –ø–æ–ª–Ω—ã–º URL
    test_url = "https://store.steampowered.com/app/730/CounterStrike_2/"
    print(f"\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º URL: {test_url}")
    
    try:
        chart_buffer, game_info = await generate_price_chart(test_url)
        
        if chart_buffer and game_info:
            print(f"   ‚úÖ –ì—Ä–∞—Ñ–∏–∫ —Å–æ–∑–¥–∞–Ω –¥–ª—è: {game_info.get('name', 'Unknown')}")
            print(f"   üÜî Steam ID: {game_info.get('id', 'Unknown')}")
            print(f"   üìä –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: {game_info.get('data_source', 'Unknown')}")
            print(f"   üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫: {game_info.get('data_points', 0)}")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:")
    print("- –ï—Å–ª–∏ SteamDB –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ")
    print("- –†–µ–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ä—É–±–ª—è—Ö")
    print("- –ì—Ä–∞—Ñ–∏–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–º–µ—á–∞–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    asyncio.run(test_steamdb_integration())
