"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π Steam –±–æ—Ç–∞:
1. Steam Wishlist –∞–Ω–∞–ª–∏–∑
2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ü–µ–Ω
3. AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–≥—Ä
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def test_wishlist_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å Steam Wishlist"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam Wishlist —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    try:
        from steam_wishlist import get_wishlist_discounts, SteamWishlistParser
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä URL
        async with SteamWishlistParser() as parser:
            test_urls = [
                "https://steamcommunity.com/id/testuser",
                "https://steamcommunity.com/profiles/76561198123456789",
                "steamcommunity.com/id/anothertestuser"
            ]
            
            print("üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è Steam ID...")
            for url in test_urls:
                steam_id = parser.extract_steam_id(url)
                print(f"   URL: {url} -> Steam ID: {steam_id}")
        
        # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Ä–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç wishlist —Ç—Ä–µ–±—É–µ—Ç –ø—É–±–ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        print("‚úÖ Steam Wishlist –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print("‚ÑπÔ∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—É–±–ª–∏—á–Ω—ã–π Steam –ø—Ä–æ—Ñ–∏–ª—å")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Steam Wishlist: {e}")

async def test_price_chart_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤"""
    print("\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ü–µ–Ω...")
    
    try:
        from price_chart_generator import generate_price_chart
        
        test_games = ["Cyberpunk 2077", "The Witcher 3", "Counter-Strike 2"]
        
        for game_name in test_games:
            print(f"   –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ—Å—Ç–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è: {game_name}")
            chart_buffer, game_info = await generate_price_chart(game_name)
            
            if chart_buffer:
                print(f"   ‚úÖ –ì—Ä–∞—Ñ–∏–∫ —Å–æ–∑–¥–∞–Ω –¥–ª—è {game_info.get('name', game_name)}")
                # –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                # with open(f"test_chart_{game_name.replace(' ', '_')}.png", "wb") as f:
                #     chart_buffer.seek(0)
                #     f.write(chart_buffer.read())
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è {game_name}")
        
        print("‚úÖ –ú–æ–¥—É–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤: {e}")

async def test_ai_recommendations_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...")
    
    try:
        from ai_recommendations import get_game_recommendations
        
        test_preferences = [
            ["The Witcher 3", "Skyrim", "Cyberpunk 2077"],
            ["Counter-Strike", "Valorant"],
            ["Minecraft", "Terraria", "Stardew Valley"]
        ]
        
        for i, preferences in enumerate(test_preferences, 1):
            print(f"   –¢–µ—Å—Ç {i}: {', '.join(preferences)}")
            recommendations = await get_game_recommendations(preferences)
            
            if recommendations and recommendations.get('discounted_games'):
                games_count = recommendations['total_games']
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {games_count} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                for j, game in enumerate(recommendations['discounted_games'][:3], 1):
                    name = game.get('name', 'Unknown')
                    discount = game.get('discount', 0)
                    print(f"      {j}. {name} (-{discount}%)")
            else:
                print(f"   ‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        print("‚úÖ –ú–æ–¥—É–ª—å AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}")

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""
    print("üì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥—É–ª–µ–π...")
    
    modules_to_test = [
        ('steam_wishlist', 'Steam Wishlist'),
        ('price_chart_generator', 'Price Chart Generator'),
        ('ai_recommendations', 'AI Recommendations')
    ]
    
    for module_name, description in modules_to_test:
        try:
            __import__(module_name)
            print(f"   ‚úÖ {description} –º–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        except ImportError as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ {description}: {e}")

def test_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    dependencies = [
        ('aiohttp', 'HTTP client –¥–ª—è async –∑–∞–ø—Ä–æ—Å–æ–≤'),
        ('matplotlib', '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤'),
        ('numpy', '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏'),
        ('openai', 'OpenAI API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)')
    ]
    
    for package, description in dependencies:
        try:
            __import__(package)
            print(f"   ‚úÖ {package}: {description}")
        except ImportError:
            print(f"   ‚ùå {package}: {description} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π Steam –±–æ—Ç–∞\n")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    test_dependencies()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    test_imports()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    await test_wishlist_functionality()
    await test_price_chart_functionality()
    await test_ai_recommendations_functionality()
    
    print("\n" + "=" * 60)
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python steam_bot.py")
    print("   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("      ‚Ä¢ /wishlist https://steamcommunity.com/id/your_profile")
    print("      ‚Ä¢ /–≥—Ä–∞—Ñ–∏–∫ Cyberpunk 2077")
    print("      ‚Ä¢ /—Ä–µ–∫–æ–º–µ–Ω–¥—É—é")

if __name__ == "__main__":
    asyncio.run(main())
