#!/bin/bash

# üîß ZarinAI - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ Google Cloud VM

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVICE_NAME="zarinai"
LOG_FILE="/var/log/zarinai.log"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë           ü§ñ ZarinAI Manager         ‚ïë"
    echo "‚ïë      Google Cloud VM Control        ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

check_status() {
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:${NC}"
    systemctl is-active --quiet $SERVICE_NAME
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ ZarinAI –∑–∞–ø—É—â–µ–Ω${NC}"
        echo -e "${BLUE}üïê Uptime:${NC} $(systemctl show $SERVICE_NAME --property=ActiveEnterTimestamp --value | cut -d' ' -f2-)"
    else
        echo -e "${RED}‚ùå ZarinAI –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    
    echo -e "\n${BLUE}üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:${NC}"
    ps aux | grep python | grep -v grep | awk '{print $4"% RAM, PID: "$2}'
    
    echo -e "\n${BLUE}üíø –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:${NC}"
    df -h / | tail -1 | awk '{print "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: "$3" –∏–∑ "$2" ("$5")"}'
}

show_logs() {
    echo -e "${BLUE}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:${NC}"
    if [ -f "$LOG_FILE" ]; then
        tail -20 "$LOG_FILE"
    else
        journalctl -u zarinai -n 20 --no-pager
    fi
}

follow_logs() {
    echo -e "${BLUE}üìã –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
    if [ -f "$LOG_FILE" ]; then
        tail -f "$LOG_FILE"
    else
        journalctl -u zarinai -f
    fi
}

start_bot() {
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ ZarinAI...${NC}"
    sudo systemctl start $SERVICE_NAME
    sleep 2
    check_status
}

stop_bot() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ZarinAI...${NC}"
    sudo systemctl stop $SERVICE_NAME
    sleep 2
    check_status
}

restart_bot() {
    echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ ZarinAI...${NC}"
    sudo systemctl restart $SERVICE_NAME
    sleep 3
    check_status
}

update_bot() {
    echo -e "${YELLOW}üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ZarinAI...${NC}"
    
    cd /home/zarinai/AueZarina
    
    echo "1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞..."
    sudo systemctl stop $SERVICE_NAME
    
    echo "2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞..."
    sudo -u zarinai git pull origin main
    
    echo "3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    sudo -u zarinai ./venv/bin/pip install -r requirements.txt --upgrade
    
    echo "4. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
    sudo systemctl start $SERVICE_NAME
    
    sleep 3
    check_status
    echo -e "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
}

backup_database() {
    echo -e "${YELLOW}üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
    
    BACKUP_DIR="/home/zarinai/backups"
    sudo -u zarinai mkdir -p $BACKUP_DIR
    
    BACKUP_FILE="$BACKUP_DIR/steam_bot_$(date +%Y%m%d_%H%M%S).db"
    sudo -u zarinai cp /home/zarinai/AueZarina/steam_bot.db $BACKUP_FILE
    
    echo -e "${GREEN}‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_FILE${NC}"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä—ã —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
    echo -e "\n${BLUE}üìä –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:${NC}"
    sudo -u zarinai ls -lh $BACKUP_DIR/*.db 2>/dev/null || echo "–†–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
}

system_info() {
    echo -e "${BLUE}üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:${NC}"
    echo "OS: $(lsb_release -d | cut -f2)"
    echo "Kernel: $(uname -r)"
    echo "CPU: $(nproc) cores"
    echo "RAM: $(free -h | awk '/^Mem:/ {print $2}')"
    echo "Disk: $(df -h / | tail -1 | awk '{print $2}')"
    echo ""
    echo -e "${BLUE}üåê –°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
    echo "Internal IP: $(hostname -I | awk '{print $1}')"
    echo "External IP: $(curl -s ifconfig.me 2>/dev/null || echo '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å')"
}

install_dependencies() {
    echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    sudo apt update
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
    sudo apt install -y htop iotop nethogs ncdu tree
    
    echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
}

show_menu() {
    print_header
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo ""
    echo "1) üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "2) üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "3) üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "4) üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "5) üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "6) üìã –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏"
    echo "7) üì• –û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "8) üíæ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î"
    echo "9) üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "10) üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã"
    echo "0) üö™ –í—ã—Ö–æ–¥"
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (0-10): " choice
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    show_menu
    
    case $choice in
        1) check_status ;;
        2) start_bot ;;
        3) stop_bot ;;
        4) restart_bot ;;
        5) show_logs ;;
        6) follow_logs ;;
        7) update_bot ;;
        8) backup_database ;;
        9) system_info ;;
        10) install_dependencies ;;
        0) 
            echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.${NC}"
            ;;
    esac
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    clear
done
