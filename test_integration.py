"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_bot_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ –±–æ—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ steam_bot.py...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ steam_bot.py –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏
        import steam_bot
        print("   ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å steam_bot –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        bot_methods = dir(steam_bot.SteamDiscountBot)
        
        required_methods = [
            'wishlist_command',
            'price_chart_command', 
            'ai_recommendations_command',
            'handle_text_messages',
            '_process_wishlist',
            '_process_ai_recommendations'
        ]
        
        for method in required_methods:
            if method in bot_methods:
                print(f"   ‚úÖ –ú–µ—Ç–æ–¥ {method} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"   ‚ùå –ú–µ—Ç–æ–¥ {method} –ù–ï –ù–ê–ô–î–ï–ù")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ steam_bot: {e}")
        return False

def test_bot_initialization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞ —Å –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞...")
    
    try:
        from steam_bot import SteamDiscountBot
        
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å —Ç–µ—Å—Ç–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º
        test_token = "1234567890:TEST_TOKEN_FOR_TESTING_ONLY"
        bot = SteamDiscountBot(test_token)
        
        print("   ‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ user_states –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        if hasattr(bot, 'user_states'):
            print("   ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        else:
            print("   ‚ùå –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ù–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        handlers = bot.application.handlers
        command_handlers = []
        
        for group in handlers.values():
            for handler in group:
                if hasattr(handler, 'command'):
                    command_handlers.extend(handler.command)
        
        new_commands = ['wishlist', 'chart', 'recommend', 'grafik', 'rekomend']
        
        for cmd in new_commands:
            if cmd in command_handlers:
                print(f"   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /{cmd} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞")
            else:
                print(f"   ‚ùå –ö–æ–º–∞–Ω–¥–∞ /{cmd} –ù–ï –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
        return False

def test_help_messages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã"""
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    try:
        # –ß–∏—Ç–∞–µ–º steam_bot.py –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ help
        with open('steam_bot.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        new_commands_in_help = [
            '/wishlist',
            '/chart',
            '/recommend',
            'AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
            'Steam Wishlist'
        ]
        
        for cmd in new_commands_in_help:
            if cmd in content:
                print(f"   ‚úÖ {cmd} –Ω–∞–π–¥–µ–Ω –≤ —Å–ø—Ä–∞–≤–∫–µ")
            else:
                print(f"   ‚ùå {cmd} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–ø—Ä–∞–≤–∫–µ")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ Steam –±–æ—Ç")
    print("=" * 65)
    
    all_tests_passed = True
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    if not test_bot_imports():
        all_tests_passed = False
    
    if not test_bot_initialization():
        all_tests_passed = False
    
    if not test_help_messages():
        all_tests_passed = False
    
    print("\n" + "=" * 65)
    
    if all_tests_passed:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\n‚ú® –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã:")
        print("   üíù Steam Wishlist –∞–Ω–∞–ª–∏–∑ - /wishlist")
        print("   üìà –ì—Ä–∞—Ñ–∏–∫–∏ —Ü–µ–Ω - /–≥—Ä–∞—Ñ–∏–∫")  
        print("   ü§ñ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ - /—Ä–µ–∫–æ–º–µ–Ω–¥—É—é")
        print("\nüöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É: python steam_bot.py")
    else:
        print("‚ùå –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö")
    
    return all_tests_passed

if __name__ == "__main__":
    main()
