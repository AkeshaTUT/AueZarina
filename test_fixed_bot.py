"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∫–∞–∑ –≤—Å–µ—Ö —Å–∫–∏–¥–æ–∫
"""
import asyncio
from steam_scraper import SteamScraper

async def test_all_deals():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∫–∞–∑ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–∫–∏–¥–æ–∫"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö —Å–∫–∏–¥–æ–∫...")
    
    scraper = SteamScraper()
    deals = await scraper.get_discounted_games(min_discount=30, max_results=100)
    
    print(f"üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Å–∫–∏–¥–æ–∫: {len(deals)}")
    print("üéÆ –¢–æ–ø-10 —Å–∫–∏–¥–æ–∫:")
    
    for i, deal in enumerate(deals[:10], 1):
        print(f"{i:2d}. {deal['title']} (-{deal['discount']}%)")
    
    if len(deals) > 10:
        print(f"... –∏ –µ—â–µ {len(deals) - 10} —Å–∫–∏–¥–æ–∫")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–±–∏–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
    from steam_bot import SteamDiscountBot
    
    class MockBot:
        def format_deals_message(self, deals):
            if not deals:
                return "–ù–µ—Ç —Å–∫–∏–¥–æ–∫"
            
            message = f"üéÆ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ Steam ({len(deals)} –∏–≥—Ä)\n\n"
            for deal in deals:
                message += f"üí• {deal['title']} (-{deal['discount']}%)\n"
                message += f"üîó {deal['url']}\n\n"
            return message
        
        def split_message(self, message, max_length):
            chunks = []
            current_chunk = ""
            
            for line in message.split('\n'):
                if len(current_chunk + line + '\n') > max_length:
                    if current_chunk:
                        chunks.append(current_chunk)
                        current_chunk = line + '\n'
                    else:
                        chunks.append(line)
                else:
                    current_chunk += line + '\n'
            
            if current_chunk:
                chunks.append(current_chunk)
                
            return chunks
    
    mock_bot = MockBot()
    message = mock_bot.format_deals_message(deals)
    
    print(f"\nüìè –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {len(message)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    if len(message) > 4000:
        chunks = mock_bot.split_message(message, 4000)
        print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑–±–∏—Ç–æ –Ω–∞ {len(chunks)} —á–∞—Å—Ç–µ–π:")
        for i, chunk in enumerate(chunks, 1):
            print(f"  –ß–∞—Å—Ç—å {i}: {len(chunk)} —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –æ–¥–∏–Ω –±–ª–æ–∫")

if __name__ == "__main__":
    asyncio.run(test_all_deals())
