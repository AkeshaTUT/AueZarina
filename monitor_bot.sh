#!/bin/bash

# ZarinAI Bot Health Monitor
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–¥–æ—Ä–æ–≤—å—è –±–æ—Ç–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è

SERVICE_NAME="zarinai-bot"
LOG_FILE="/var/log/zarinai-monitor.log"
TELEGRAM_BOT_TOKEN="8255737143:AAHMEy6kmHIee4H9__bSp0LEbaBQBlWt_Q0"
ADMIN_CHAT_ID="5784871405"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
send_telegram_notification() {
    local message="$1"
    local full_message="ü§ñ ZarinAI Monitor: $message"
    
    curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
        -d chat_id="$ADMIN_CHAT_ID" \
        -d text="$full_message" > /dev/null 2>&1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
check_bot_health() {
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        return 0  # –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
    else
        return 1  # –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
check_resources() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ–ª—å—à–µ 80% –¥–æ—Å—Ç—É–ø–Ω–æ–π)
    local memory_usage=$(ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | grep "main.py" | head -1 | awk '{print $4}')
    if [[ -n "$memory_usage" ]] && (( $(echo "$memory_usage > 80" | bc -l) )); then
        log_message "WARNING: High memory usage: ${memory_usage}%"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ CPU (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ–ª—å—à–µ 90% –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
    local cpu_usage=$(ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | grep "main.py" | head -1 | awk '{print $5}')
    if [[ -n "$cpu_usage" ]] && (( $(echo "$cpu_usage > 90" | bc -l) )); then
        log_message "WARNING: High CPU usage: ${cpu_usage}%"
        return 1
    fi
    
    return 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
check_logs_for_errors() {
    local recent_errors=$(journalctl -u "$SERVICE_NAME" --since "5 minutes ago" -p err --no-pager | wc -l)
    if [[ $recent_errors -gt 5 ]]; then
        log_message "WARNING: $recent_errors errors in the last 5 minutes"
        return 1
    fi
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_bot() {
    log_message "Starting health check..."
    
    local issues=0
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞
    if ! check_bot_health; then
        log_message "ERROR: Bot service is not running"
        send_telegram_notification "‚ùå –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞..."
        
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        systemctl start "$SERVICE_NAME"
        sleep 10
        
        if check_bot_health; then
            log_message "SUCCESS: Bot service restarted successfully"
            send_telegram_notification "‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        else
            log_message "ERROR: Failed to restart bot service"
            send_telegram_notification "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞!"
            issues=$((issues + 1))
        fi
    else
        log_message "OK: Bot service is running"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    if ! check_resources; then
        log_message "WARNING: Resource usage is high"
        issues=$((issues + 1))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
    if ! check_logs_for_errors; then
        log_message "WARNING: Recent errors detected in logs"
        issues=$((issues + 1))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–∏—Å–∫–∞
    local disk_usage=$(df /home | tail -1 | awk '{print $5}' | sed 's/%//')
    if [[ $disk_usage -gt 90 ]]; then
        log_message "WARNING: Disk usage is high: ${disk_usage}%"
        send_telegram_notification "‚ö†Ô∏è –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${disk_usage}%"
        issues=$((issues + 1))
    fi
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    if [[ $issues -eq 0 ]]; then
        log_message "HEALTH CHECK PASSED: All systems operational"
    else
        log_message "HEALTH CHECK ISSUES: $issues issues detected"
    fi
    
    return $issues
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
install_monitoring() {
    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥ —Ñ–∞–π–ª–∞
    touch "$LOG_FILE"
    chmod 644 "$LOG_FILE"
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ crontab (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
    (crontab -l 2>/dev/null; echo "*/5 * * * * /home/akezhanseytqasym/AueZarina/monitor_bot.sh > /dev/null 2>&1") | crontab -
    
    echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)"
    echo "üìÑ –õ–æ–≥–∏: $LOG_FILE"
}

# –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
uninstall_monitoring() {
    crontab -l 2>/dev/null | grep -v "monitor_bot.sh" | crontab -
    echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–¥–∞–ª–µ–Ω"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
show_logs() {
    if [[ -f "$LOG_FILE" ]]; then
        tail -n 50 "$LOG_FILE"
    else
        echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
case "$1" in
    monitor)
        monitor_bot
        ;;
    install)
        if [[ $EUID -ne 0 ]]; then
            echo "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo."
            exit 1
        fi
        install_monitoring
        ;;
    uninstall)
        if [[ $EUID -ne 0 ]]; then
            echo "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo."
            exit 1
        fi
        uninstall_monitoring
        ;;
    logs)
        show_logs
        ;;
    test)
        send_telegram_notification "üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        echo "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
        ;;
    *)
        cat << EOF
üîç ZarinAI Bot Health Monitor

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
    $0 <–∫–æ–º–∞–Ω–¥–∞>

–ö–û–ú–ê–ù–î–´:
    monitor     –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∑–¥–æ—Ä–æ–≤—å—è –±–æ—Ç–∞
    install     –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
    uninstall   –£–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    logs        –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    test        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

–§–£–ù–ö–¶–ò–ò –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê:
    ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞
    ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ–µ
    ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö
    ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
    ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö

–§–ê–ô–õ–´:
    –õ–æ–≥–∏: $LOG_FILE
    –°–µ—Ä–≤–∏—Å: $SERVICE_NAME
EOF
        ;;
esac
