#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from simple_free_games_parser import get_current_free_games, SimpleFreeGamesParser
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test_simple_parser():
    """–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞"""
    print("üÜì –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä...")
    
    try:
        # –¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        all_games = await get_current_free_games()
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(all_games)} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä")
        print()
        
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
        platforms = {}
        for game in all_games:
            platform = game.get('platform', 'Unknown')
            if platform not in platforms:
                platforms[platform] = []
            platforms[platform].append(game)
        
        # –í—ã–≤–æ–¥ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
        for platform, games in platforms.items():
            print(f"üì± {platform}: {len(games)} –∏–≥—Ä")
            for game in games[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                title = game.get('title', 'Unknown')
                description = game.get('description', 'No description')
                end_date = game.get('end_date', 'Unknown')
                
                print(f"  üéÆ {title}")
                print(f"     {description}")
                print(f"     –î–æ: {end_date}")
                print()
        
        # –¢–µ—Å—Ç Epic Games –æ—Ç–¥–µ–ª—å–Ω–æ
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Epic Games API...")
        parser = SimpleFreeGamesParser()
        epic_games = await parser._get_epic_free_games_simple()
        print(f"‚úÖ Epic Games: {len(epic_games)} –∏–≥—Ä —Å –∞–∫—Ü–∏—è–º–∏")
        
        for game in epic_games:
            print(f"  üéÅ {game.get('title', 'Unknown')}")
            print(f"     {game.get('description', 'No description')}")
            print()
        
        return len(all_games) > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞"""
    print("üöÄ –¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä")
    print("=" * 60)
    
    success = await test_simple_parser()
    
    print("=" * 60)
    if success:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("üì± –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ Telegram –±–æ—Ç–µ.")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(main())
