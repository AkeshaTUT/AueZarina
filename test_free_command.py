#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /free –≤ –±–æ—Ç–µ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ Telegram API
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from simple_free_games_parser import get_current_free_games
from database import DatabaseManager
import logging

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

class MockUpdate:
    """Mock –æ–±—ä–µ–∫—Ç –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ Telegram Update"""
    def __init__(self):
        self.effective_user = MockUser()
        self.message = MockMessage()

class MockUser:
    """Mock –æ–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    def __init__(self):
        self.id = 12345
        self.username = "test_user"
        self.first_name = "Test"
        self.last_name = "User"

class MockMessage:
    """Mock –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
    def __init__(self):
        self.responses = []
    
    async def reply_text(self, text, **kwargs):
        self.responses.append({
            'text': text,
            'kwargs': kwargs
        })
        print(f"üì± –û—Ç–≤–µ—Ç –±–æ—Ç–∞:")
        print(f"   {text[:200]}{'...' if len(text) > 200 else ''}")
        print()

async def test_free_command():
    """–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /free"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /free...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º mock –æ–±—ä–µ–∫—Ç—ã
        update = MockUpdate()
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db = DatabaseManager()
        db.add_user(update.effective_user.id, 
                   update.effective_user.username,
                   update.effective_user.first_name, 
                   update.effective_user.last_name)
        
        # –≠–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∫–æ–º–∞–Ω–¥—ã /free
        await update.message.reply_text("üîç –ò—â—É –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        all_games = await get_current_free_games()
        
        if not all_games:
            await update.message.reply_text("üòî –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ä–∞–∑–¥–∞—á–∞—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return False
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(all_games)} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä")
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        display_games = all_games[:10]
        message = f"üÜì <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏ ({len(display_games)}):</b>\n\n"
        
        for game in display_games:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            platform_emoji = {
                'Steam': 'üü¶',
                'Epic Games Store': 'üü™', 
                'GOG': 'üü´',
                'Other': '‚ö™'
            }.get(game.get('platform', 'Other'), '‚ö™')
            
            title = game.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞')
            description = game.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
            end_date = game.get('end_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            url = game.get('url', '')
            
            message += f"{platform_emoji} <b>{title}</b>\n"
            message += f"üìù {description}\n"
            message += f"üóìÔ∏è –î–æ: {end_date}\n"
            if url:
                message += f"üîó <a href='{url}'>–ü–æ–ª—É—á–∏—Ç—å –∏–≥—Ä—É</a>\n"
            message += "\n"
        
        if len(all_games) > 10:
            message += f"üí° <i>–ò –µ—â–µ {len(all_games) - 10} —Ä–∞–∑–¥–∞—á...</i>\n"
        
        message += "\nüîÑ <i>–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</i>"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await update.message.reply_text(message, parse_mode='HTML', disable_web_page_preview=True)
        
        print(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ /free –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        print(f"üìä –ü–æ–∫–∞–∑–∞–Ω–æ {len(display_games)} –∏–∑ {len(all_games)} –∏–≥—Ä")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∏–≥—Ä
        print("\nüéÆ –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–≥—Ä:")
        for i, game in enumerate(all_games[:5], 1):
            print(f"  {i}. {game.get('title', 'Unknown')} ({game.get('platform', 'Unknown')})")
            print(f"     –î–æ: {game.get('end_date', 'Unknown')}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞"""
    print("üöÄ –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /free —Å –∂–∏–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 60)
    
    success = await test_free_command()
    
    print("=" * 60)
    if success:
        print("üéâ –ö–æ–º–∞–Ω–¥–∞ /free —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∂–∏–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
        print("‚úÖ –ì–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ.")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
    print("=" * 60)

if __name__ == "__main__":
    asyncio.run(main())
