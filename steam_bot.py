import asyncio
import json
import logging
import os
from datetime import datetime, timedelta
from typing import List
from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
import schedule
import time
import threading
from steam_scraper import SteamScraper
from database import DatabaseManager
from steam_wishlist import get_wishlist_discounts
from steam_library import get_steam_library, get_recently_played_games
from ai_recommendations import get_game_recommendations
from ai_game_recommendations import get_ai_game_recommendations
from config import OPENROUTER_API_KEY, AI_RECOMMENDATIONS_ENABLED, AI_MAX_RECOMMENDATIONS
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class SteamDiscountBot:
    def __init__(self, bot_token: str):
        self.bot_token = bot_token
        self.bot = Bot(token=bot_token)
        self.application = Application.builder().token(bot_token).build()
        self.db = DatabaseManager()
        self.scraper = SteamScraper()
        
        # –ñ–∞–Ω—Ä—ã Steam
        self.available_genres = [
            "Action", "Adventure", "Casual", "Indie", "Massively Multiplayer",
            "Racing", "RPG", "Simulation", "Sports", "Strategy", 
            "Early Access", "Free to Play", "Horror", "Puzzle"
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("subscribe", self.subscribe_command))
        self.application.add_handler(CommandHandler("unsubscribe", self.unsubscribe_command))
        self.application.add_handler(CommandHandler("deals", self.deals_command))
        self.application.add_handler(CommandHandler("genres", self.genres_command))
        self.application.add_handler(CommandHandler("free", self.free_games_command))
        self.application.add_handler(CommandHandler("discount", self.discount_settings_command))
        self.application.add_handler(CommandHandler("settings", self.user_settings_command))
        self.application.add_handler(CommandHandler("weeklydigest", self.weeklydigest_command))
        
        # –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        self.application.add_handler(CommandHandler("wishlist", self.wishlist_command))
        self.application.add_handler(CommandHandler("recommend", self.ai_recommendations_command))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å—ã –¥–ª—è —Ä—É—Å—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞)
        self.application.add_handler(CommandHandler("rekomend", self.ai_recommendations_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (inline –∫–Ω–æ–ø–∫–∏)
        self.application.add_handler(CallbackQueryHandler(self.button_callback))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        from telegram.ext import MessageHandler, filters
        self.application.add_handler(MessageHandler(
            filters.TEXT & ~filters.COMMAND, 
            self.handle_text_messages_conditionally
        ))
        
        # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        self.user_states = {}
        self.user_state_timestamps = {}  # –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä
        self.init_sample_data()
        
    def init_sample_data(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä
        sample_free_games = [
            {
                'title': 'Epic Games Store - Control',
                'description': '–°–≤–µ—Ä—Ö—ä–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—à–µ–Ω-—Ç—Ä–∏–ª–ª–µ—Ä —Å –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º —Å—é–∂–µ—Ç–æ–º',
                'platform': 'Epic Games',
                'url': 'https://store.epicgames.com/en-US/p/control',
                'end_date': '2025-08-02',
                'image_url': 'https://cdn1.epicgames.com/offer/870a3f6935d84ed8a8ad7c12e8b03a2c/EGS_Control_RemedyEntertainment_S1_2560x1440-61c3a5fcf5becd21e8c5696c40e0bafe'
            },
            {
                'title': 'Steam - Counter-Strike 2',
                'description': '–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ —à—É—Ç–µ—Ä–∞',
                'platform': 'Steam',
                'url': 'https://store.steampowered.com/app/730/CounterStrike_2/',
                'end_date': '–ù–∞–≤—Å–µ–≥–¥–∞',
                'image_url': 'https://cdn.akamai.steamstatic.com/steam/apps/730/header.jpg'
            },
            {
                'title': 'GOG - Cyberpunk 2077 DLC',
                'description': '–î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –∫–∏–±–µ—Ä–ø–∞–Ω–∫-RPG (—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–∞)',
                'platform': 'GOG',
                'url': 'https://www.gog.com/game/cyberpunk_2077',
                'end_date': '2025-07-30',
                'image_url': 'https://images.gog-statics.com/8e52d66fe0b56d5de96346b64b6ca95a25c1f9eb8c1fb28c58e3eb23f8b5c34c.jpg'
            }
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
        existing_games = self.db.get_active_free_games()
        if not existing_games:
            for game in sample_free_games:
                self.db.add_free_game(**game)
    
    def set_user_state(self, user_id: int, state: str):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º"""
        import time
        self.user_states[user_id] = state
        self.user_state_timestamps[user_id] = time.time()
    
    def clear_user_state(self, user_id: int):
        """–û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in self.user_states:
            del self.user_states[user_id]
        if user_id in self.user_state_timestamps:
            del self.user_state_timestamps[user_id]
    
    def cleanup_expired_states(self):
        """–û—á–∏—â–∞–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è (—Å—Ç–∞—Ä—à–µ 10 –º–∏–Ω—É—Ç)"""
        import time
        current_time = time.time()
        expired_users = []
        
        for user_id, timestamp in self.user_state_timestamps.items():
            if current_time - timestamp > 600:  # 10 –º–∏–Ω—É—Ç
                expired_users.append(user_id)
        
        for user_id in expired_users:
            self.clear_user_state(user_id)
    
    def load_subscribers(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)"""
        # –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
        pass
        
    def save_subscribers(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)"""
        # –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
        pass
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        self.db.add_user(user.id, user.username, user.first_name, user.last_name)
        
        welcome_message = """
üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Steam Discount Bot! 

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—É—á—à–∏–µ —Å–∫–∏–¥–∫–∏ –Ω–∞ –∏–≥—Ä—ã –≤ Steam –æ—Ç 30% –¥–æ 100%!

üî• <b>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
üéØ –§–∏–ª—å—Ç—Ä –ø–æ –∂–∞–Ω—Ä–∞–º - –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏ - –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏ –∏–≥—Ä
üìä –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª—É—á—à–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
‚öôÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–∏–¥–æ–∫
üìÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¢–û–ü-5 –∏–≥—Ä

üöÄ <b>–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
üíù –ê–Ω–∞–ª–∏–∑ Steam Wishlist - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∏–¥–æ–∫ –Ω–∞ –∂–µ–ª–∞–µ–º—ã–µ –∏–≥—Ä—ã
ü§ñ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –Ω–∞ –±–∞–∑–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö
/deals - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Å–∫–∏–¥–∫–∏
/genres - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∂–∞–Ω—Ä—ã –∏–≥—Ä
/free - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏
/discount - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É
/settings - –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

<b>–ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/wishlist - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∫–∏–¥–∫–∏ –≤ –≤–∞—à–µ–º Steam Wishlist
/recommend - –ü–æ–ª—É—á–∏—Ç—å AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–≥—Ä
/help - –ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º

–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–∫–∏–¥–∫–∏ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤ –∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¢–û–ü –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º –≤ 19:00!
        """
        await update.message.reply_text(welcome_message, parse_mode='HTML')
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_message = """
üîß <b>–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ:</b>
/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/deals - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö —Å–∫–∏–¥–æ–∫

<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
/genres –∏–ª–∏ /–∂–∞–Ω—Ä—ã - –í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –∂–∞–Ω—Ä—ã –∏–≥—Ä
/discount –∏–ª–∏ /—Å–∫–∏–¥–∫–∞ - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É (30%, 50%, 70%, 90%)
/settings - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

<b>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
/free –∏–ª–∏ /—Ä–∞–∑–¥–∞—á–∏ - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏
/weeklydigest - –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¢–û–ü-5 –∏–≥—Ä
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

<b>üöÄ –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò:</b>
üíù /wishlist - –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ Steam Wishlist
   –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π Steam-–ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫–∏–¥–æ–∫

ü§ñ /recommend –∏–ª–∏ /rekomend - –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–≥—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ Wishlist –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
   –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à Steam Wishlist –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–≥—Ä –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π

<b>ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
üìä –ë–æ—Ç –∏—â–µ—Ç —Å–∫–∏–¥–∫–∏ –æ—Ç 30% –¥–æ 100% –≤ Steam Store
üéØ –§–∏–ª—å—Ç—Ä—É–µ—Ç –ø–æ –≤–∞—à–∏–º –∂–∞–Ω—Ä–∞–º –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å–∫–∏–¥–∫–µ
üîî –ü—Ä–∏—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
üìÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¢–û–ü-5 –∏–≥—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º –≤ 18:00
üí∞ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω –∏ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        """
        await update.message.reply_text(help_message, parse_mode='HTML')
    
    async def subscribe_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /subscribe"""
        user_id = update.effective_user.id
        user = update.effective_user
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        self.db.add_user(user_id, user.username, user.first_name, user.last_name)
        
        if self.db.subscribe_user(user_id):
            settings = self.db.get_user_settings(user_id)
            
            response = "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö!\n\n"
            response += f"üìä –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
            response += f"üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞: {settings['min_discount']}%\n"
            
            if settings['preferred_genres']:
                response += f"üéÆ –ñ–∞–Ω—Ä—ã: {', '.join(settings['preferred_genres'])}\n"
            else:
                response += f"üéÆ –ñ–∞–Ω—Ä—ã: –í—Å–µ (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —á–µ—Ä–µ–∑ /genres)\n"
            
            response += f"\nüîî –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤"
            response += f"\nüìÖ –ò –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¢–û–ü-5 –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º –≤ 19:00"
            
            await update.message.reply_text(response)
        else:
            await update.message.reply_text("‚ÑπÔ∏è –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
    
    async def unsubscribe_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /unsubscribe"""
        user_id = update.effective_user.id
        if self.db.unsubscribe_user(user_id):
            await update.message.reply_text("‚ùå –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
        else:
            await update.message.reply_text("‚ÑπÔ∏è –í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
    
    async def genres_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /genres - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∂–∞–Ω—Ä–æ–≤"""
        user_id = update.effective_user.id
        user = update.effective_user
        self.db.add_user(user_id, user.username, user.first_name, user.last_name)
        
        current_genres = self.db.get_user_genres(user_id)
        
        # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∂–∞–Ω—Ä–∞–º–∏
        keyboard = []
        for i in range(0, len(self.available_genres), 2):
            row = []
            for j in range(2):
                if i + j < len(self.available_genres):
                    genre = self.available_genres[i + j]
                    # –û—Ç–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã
                    prefix = "‚úÖ " if genre in current_genres else ""
                    row.append(InlineKeyboardButton(
                        f"{prefix}{genre}", 
                        callback_data=f"genre_{genre}"
                    ))
            keyboard.append(row)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        keyboard.append([
            InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ", callback_data="genre_clear"),
            InlineKeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="genre_save")
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        message = f"üéÆ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –∂–∞–Ω—Ä—ã –∏–≥—Ä:</b>\n\n"
        if current_genres:
            message += f"–í—ã–±—Ä–∞–Ω–æ: {', '.join(current_genres)}\n\n"
        else:
            message += "–°–µ–π—á–∞—Å –≤—ã–±—Ä–∞–Ω—ã –≤—Å–µ –∂–∞–Ω—Ä—ã\n\n"
        message += "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∂–∞–Ω—Ä —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞"
        
        await update.message.reply_text(message, reply_markup=reply_markup, parse_mode='HTML')
    
    async def free_games_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /free - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏"""
        user_id = update.effective_user.id
        user = update.effective_user
        self.db.add_user(user_id, user.username, user.first_name, user.last_name)
        
        await update.message.reply_text("üîç –ò—â—É –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
        
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä
            from simple_free_games_parser import get_current_free_games
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            all_games = await get_current_free_games()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∏–≥—Ä–∞–º–∏
            await self._update_database_with_live_games(all_games)
            
            if not all_games:
                await update.message.reply_text("üòî –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ä–∞–∑–¥–∞—á–∞—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                return
            
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            display_games = all_games[:10]
            message = f"üÜì <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏ ({len(display_games)}):</b>\n\n"
            
            for game in display_games:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
                platform_emoji = {
                    'Steam': 'üü¶',
                    'Epic Games Store': 'üü™', 
                    'GOG': 'üü´',
                    'Other': '‚ö™'
                }.get(game.get('platform', 'Other'), '‚ö™')
                
                title = game.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞')
                description = game.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
                end_date = game.get('end_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                url = game.get('url', '')
                
                message += f"{platform_emoji} <b>{title}</b>\n"
                message += f"üìù {description}\n"
                message += f"üóìÔ∏è –î–æ: {end_date}\n"
                if url:
                    message += f"üîó <a href='{url}'>–ü–æ–ª—É—á–∏—Ç—å –∏–≥—Ä—É</a>\n"
                message += "\n"
            
            if len(all_games) > 10:
                message += f"üí° <i>–ò –µ—â–µ {len(all_games) - 10} —Ä–∞–∑–¥–∞—á...</i>\n"
            
            message += "\nüîÑ <i>–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</i>"
            
            # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            if len(message) > 4000:
                chunks = self.split_message(message, 4000)
                for chunk in chunks:
                    await update.message.reply_text(chunk, parse_mode='HTML', disable_web_page_preview=True)
            else:
                await update.message.reply_text(message, parse_mode='HTML', disable_web_page_preview=True)
                
        except Exception as e:
            logger.error(f"Error getting free games: {e}")
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ä–∞–∑–¥–∞—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def _update_database_with_live_games(self, games: list):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∏–≥—Ä–∞–º–∏"""
        try:
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
            import sqlite3
            with sqlite3.connect(self.db.db_path) as conn:
                cursor = conn.cursor()
                cursor.execute('DELETE FROM free_games WHERE created_at < datetime("now", "-1 day")')
                conn.commit()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∏–≥—Ä—ã
            for game in games:
                try:
                    self.db.add_free_game(
                        title=game.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞'),
                        description=game.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'),
                        platform=game.get('platform', 'Other'),
                        url=game.get('url', ''),
                        end_date=game.get('end_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
                        image_url=game.get('image_url', '')
                    )
                except Exception as e:
                    logger.error(f"Error adding game to database: {e}")
                    
        except Exception as e:
            logger.error(f"Error updating database with live games: {e}")
    
    async def discount_settings_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /discount - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å–∫–∏–¥–∫–∏"""
        user_id = update.effective_user.id
        user = update.effective_user
        self.db.add_user(user_id, user.username, user.first_name, user.last_name)
        
        current_discount = self.db.get_user_min_discount(user_id)
        
        # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å–∫–∏–¥–æ–∫
        keyboard = [
            [
                InlineKeyboardButton("30%" + (" ‚úÖ" if current_discount == 30 else ""), callback_data="discount_30"),
                InlineKeyboardButton("50%" + (" ‚úÖ" if current_discount == 50 else ""), callback_data="discount_50")
            ],
            [
                InlineKeyboardButton("70%" + (" ‚úÖ" if current_discount == 70 else ""), callback_data="discount_70"),
                InlineKeyboardButton("90%" + (" ‚úÖ" if current_discount == 90 else ""), callback_data="discount_90")
            ]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        message = f"üí∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å–∫–∏–¥–∫–∏</b>\n\n"
        message += f"–¢–µ–∫—É—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: <b>{current_discount}%</b>\n\n"
        message += f"–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–≥—Ä:"
        
        await update.message.reply_text(message, reply_markup=reply_markup, parse_mode='HTML')
    
    async def user_settings_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings - –ø–æ–∫–∞–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = update.effective_user.id
        user = update.effective_user
        self.db.add_user(user_id, user.username, user.first_name, user.last_name)
        
        settings = self.db.get_user_settings(user_id)
        
        message = f"‚öôÔ∏è <b>–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n\n"
        message += f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if settings['is_subscribed'] else '‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã'}\n"
        message += f"üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞: <b>{settings['min_discount']}%</b>\n"
        
        if settings['preferred_genres']:
            message += f"üéÆ –ñ–∞–Ω—Ä—ã ({len(settings['preferred_genres'])}): {', '.join(settings['preferred_genres'])}\n"
        else:
            message += f"üéÆ –ñ–∞–Ω—Ä—ã: –í—Å–µ –∂–∞–Ω—Ä—ã\n"
        
        message += f"\n<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>\n"
        message += f"/subscribe - –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        message += f"/genres - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∂–∞–Ω—Ä—ã\n"
        message += f"/discount - –ò–∑–º–µ–Ω–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É"
        
        await update.message.reply_text(message, parse_mode='HTML')
    
    async def button_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∫–Ω–æ–ø–æ–∫"""
        query = update.callback_query
        await query.answer()
        
        user_id = query.from_user.id
        data = query.data
        
        if data.startswith("genre_"):
            await self.handle_genre_callback(query, user_id, data)
        elif data.startswith("discount_"):
            await self.handle_discount_callback(query, user_id, data)
    
    async def handle_genre_callback(self, query, user_id: int, data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback –¥–ª—è –∂–∞–Ω—Ä–æ–≤"""
        current_genres = self.db.get_user_genres(user_id)
        
        if data == "genre_clear":
            # –û—á–∏—â–∞–µ–º –≤—Å–µ –∂–∞–Ω—Ä—ã
            self.db.set_user_genres(user_id, [])
            await query.edit_message_text(
                "üéÆ <b>–í—Å–µ –∂–∞–Ω—Ä—ã –æ—á–∏—â–µ–Ω—ã!</b>\n\n–¢–µ–ø–µ—Ä—å –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –∏–≥—Ä—ã –≤—Å–µ—Ö –∂–∞–Ω—Ä–æ–≤.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /genres –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.",
                parse_mode='HTML'
            )
            return
        elif data == "genre_save":
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            genres_text = ', '.join(current_genres) if current_genres else "–í—Å–µ –∂–∞–Ω—Ä—ã"
            await query.edit_message_text(
                f"‚úÖ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∂–∞–Ω—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</b>\n\nüéÆ –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã: {genres_text}\n\n–¢–µ–ø–µ—Ä—å –≤ —Ä–∞—Å—Å—ã–ª–∫–µ –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –∏–≥—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤.",
                parse_mode='HTML'
            )
            return
        else:
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∂–∞–Ω—Ä
            genre = data.replace("genre_", "")
            if genre in current_genres:
                current_genres.remove(genre)
            else:
                current_genres.append(genre)
            
            self.db.set_user_genres(user_id, current_genres)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = []
        for i in range(0, len(self.available_genres), 2):
            row = []
            for j in range(2):
                if i + j < len(self.available_genres):
                    genre = self.available_genres[i + j]
                    prefix = "‚úÖ " if genre in current_genres else ""
                    row.append(InlineKeyboardButton(
                        f"{prefix}{genre}", 
                        callback_data=f"genre_{genre}"
                    ))
            keyboard.append(row)
        
        keyboard.append([
            InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ", callback_data="genre_clear"),
            InlineKeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="genre_save")
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        message = f"üéÆ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –∂–∞–Ω—Ä—ã –∏–≥—Ä:</b>\n\n"
        if current_genres:
            message += f"–í—ã–±—Ä–∞–Ω–æ: {', '.join(current_genres)}\n\n"
        else:
            message += "–°–µ–π—á–∞—Å –≤—ã–±—Ä–∞–Ω—ã –≤—Å–µ –∂–∞–Ω—Ä—ã\n\n"
        message += "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∂–∞–Ω—Ä —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞"
        
        await query.edit_message_text(message, reply_markup=reply_markup, parse_mode='HTML')
    
    async def handle_discount_callback(self, query, user_id: int, data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–∏–¥–∫–∏"""
        discount_value = int(data.replace("discount_", ""))
        self.db.set_user_min_discount(user_id, discount_value)
        
        await query.edit_message_text(
            f"‚úÖ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!</b>\n\nüí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: <b>{discount_value}%</b>\n\n–¢–µ–ø–µ—Ä—å –≤ —Ä–∞—Å—Å—ã–ª–∫–µ –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –∏–≥—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –æ—Ç {discount_value}% –∏ –≤—ã—à–µ.",
            parse_mode='HTML'
        )
    
    async def deals_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /deals"""
        user_id = update.effective_user.id
        await update.message.reply_text("üîç –ò—â—É –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
        
        try:
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –±–∞–∑–µ
            self.db.add_user(user_id)
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_genres = self.db.get_user_genres(user_id)
            min_discount = self.db.get_user_min_discount(user_id)
            
            deals = await self.scraper.get_discounted_games()
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º –∏–≥—Ä—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            filtered_deals = self.filter_deals_by_user_preferences(deals, user_genres, min_discount)
            
            if filtered_deals:
                message = self.format_deals_message(filtered_deals, user_id)
                
                # Telegram –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤ 4096 —Å–∏–º–≤–æ–ª–æ–≤
                if len(message) > 4000:
                    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
                    chunks = self.split_message(message, 4000)
                    for chunk in chunks:
                        await update.message.reply_text(chunk, parse_mode='HTML')
                else:
                    await update.message.reply_text(message, parse_mode='HTML')
            else:
                await update.message.reply_text(f"üòî –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–∫–∏–¥–æ–∫ –æ—Ç {min_discount}% —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –∂–∞–Ω—Ä–∞–º–∏.")
        except Exception as e:
            logger.error(f"Error getting deals: {e}")
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∫–∏–¥–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    def filter_deals_by_user_preferences(self, deals, user_genres, min_discount):
        """–§–∏–ª—å—Ç—Ä—É–µ—Ç –∏–≥—Ä—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"""
        if not deals:
            return []
        
        filtered_deals = []
        
        for deal in deals:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É
            discount = deal.get('discount', 0)
            if discount < min_discount:
                continue
            
            # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞–Ω—ã –∂–∞–Ω—Ä—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
            if user_genres:
                game_genres = deal.get('genres', [])
                if not any(genre in user_genres for genre in game_genres):
                    continue
            
            filtered_deals.append(deal)
        
        return filtered_deals
    
    def format_deals_message(self, deals, user_id: int):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω"""
        if not deals:
            return "üòî –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–∫–∏–¥–æ–∫."
        
        message = f"üéÆ <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ Steam ({len(deals)} –∏–≥—Ä)</b>\n\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã, –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è –¥–æ 20
        for deal in deals:
            discount = deal.get('discount', 0)
            title = deal.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞')
            url = deal.get('url', '')
            original_price = deal.get('original_price', '')
            discounted_price = deal.get('discounted_price', '')
            game_id = deal.get('app_id', 0)
            
            # –≠–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Å–∫–∏–¥–∫–∏
            if discount >= 90:
                emoji = "üî•"
            elif discount >= 70:
                emoji = "‚ö°"
            elif discount >= 50:
                emoji = "üí•"
            else:
                emoji = "üí∞"
            
            message += f"{emoji} <b>{title}</b>\n"
            message += f"üí∏ –°–∫–∏–¥–∫–∞: <b>-{discount}%</b>\n"
            
            if original_price and discounted_price:
                message += f"üí∞ <s>{original_price}</s> ‚Üí <b>{discounted_price}</b>\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω
            price_history = self.db.get_price_history(game_id)
            if price_history:
                lowest_price = min([p['price'] for p in price_history])
                try:
                    current_price = float(discounted_price.replace('‚ÇΩ', '').replace(',', '').strip())
                    if current_price <= lowest_price:
                        message += f"üéØ <b>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –º–∏–Ω–∏–º—É–º!</b>\n"
                    else:
                        message += f"üìä –ú–∏–Ω. —Ü–µ–Ω–∞: <b>{lowest_price}‚ÇΩ</b>\n"
                except:
                    pass
            
            if url:
                message += f"üîó <a href='{url}'>–ü–µ—Ä–µ–π—Ç–∏ –≤ Steam</a>\n"
            
            message += "\n"
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω
            if game_id and discounted_price:
                try:
                    price = float(discounted_price.replace('‚ÇΩ', '').replace(',', '').strip())
                    self.db.add_price_history(game_id, title, price)
                except:
                    pass
        
        return message
    
    async def weeklydigest_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç —Ç–æ–ø-5 –∏–≥—Ä —Å —Å–∞–º—ã–º–∏ –±–æ–ª—å—à–∏–º–∏ —Å–∫–∏–¥–∫–∞–º–∏"""
        user_id = update.effective_user.id
        await update.message.reply_text("üìä –§–æ—Ä–º–∏—Ä—É—é –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç...")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-5 –∏–≥—Ä –∑–∞ –Ω–µ–¥–µ–ª—é
            weekly_top = self.db.get_weekly_top_games()
            
            if weekly_top:
                message = "üìä <b>–¢–æ–ø-5 –∏–≥—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–∫–∏–¥–∫–∏</b>\n\n"
                
                for i, game in enumerate(weekly_top[:5], 1):
                    emoji = ["ü•á", "ü•à", "ü•â", "4Ô∏è‚É£", "5Ô∏è‚É£"][i-1]
                    message += f"{emoji} <b>{game['title']}</b>\n"
                    message += f"üí∏ –°–∫–∏–¥–∫–∞: <b>-{game['discount']}%</b>\n"
                    message += f"üí∞ –¶–µ–Ω–∞: <b>{game['price']}‚ÇΩ</b>\n\n"
                
                await update.message.reply_text(message, parse_mode='HTML')
            else:
                await update.message.reply_text("üìä –ï—â–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –¥–∞–π–¥–∂–µ—Å—Ç–∞.")
                
        except Exception as e:
            logger.error(f"Error getting weekly digest: {e}")
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞.")
    
    async def send_weekly_digest_to_all(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
        try:
            users = self.db.get_subscribed_users()
            weekly_top = self.db.get_weekly_top_games()
            
            if not weekly_top:
                return
            
            message = "üìä <b>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç Steam</b>\n\n"
            message += "üèÜ <b>–¢–æ–ø-5 –∏–≥—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–∫–∏–¥–∫–∏:</b>\n\n"
            
            for i, game in enumerate(weekly_top[:5], 1):
                emoji = ["ü•á", "ü•à", "ü•â", "4Ô∏è‚É£", "5Ô∏è‚É£"][i-1]
                message += f"{emoji} <b>{game['title']}</b>\n"
                message += f"üí∏ –°–∫–∏–¥–∫–∞: <b>-{game['discount']}%</b>\n"
                message += f"üí∞ –¶–µ–Ω–∞: <b>{game['price']}‚ÇΩ</b>\n\n"
            
            message += "üéÆ –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è? –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∂–∞–Ω—Ä—ã –∫–æ–º–∞–Ω–¥–æ–π /genres"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            for user_id in users:
                try:
                    await self.application.bot.send_message(
                        chat_id=user_id,
                        text=message,
                        parse_mode='HTML'
                    )
                    await asyncio.sleep(0.1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
                except Exception as e:
                    logger.error(f"Failed to send weekly digest to user {user_id}: {e}")
            
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–π –Ω–µ–¥–µ–ª–∏
            self.db.clear_weekly_top()
            
        except Exception as e:
            logger.error(f"Error sending weekly digest: {e}")
    
    def start_scheduler(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏"""
        def schedule_checker():
            while True:
                schedule.run_pending()
                time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 18:00
        schedule.every().sunday.at("18:00").do(
            lambda: asyncio.create_task(self.send_weekly_digest_to_all())
        )
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        scheduler_thread = threading.Thread(target=schedule_checker, daemon=True)
        scheduler_thread.start()
        logger.info("Weekly digest scheduler started")

    def split_message(self, message, max_length):
        """–†–∞–∑–±–∏–≤–∞–µ—Ç –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏"""
        chunks = []
        current_chunk = ""
        header_added = False
        
        lines = message.split('\n')
        header = lines[0] + '\n\n' if lines else ""
        
        for line in lines:
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–≤—ã–π —á–∞–Ω–∫
            if not header_added and line.startswith("üéÆ"):
                header_added = True
                current_chunk = line + '\n\n'
                continue
                
            if len(current_chunk + line + '\n') > max_length:
                if current_chunk:
                    chunks.append(current_chunk.strip())
                    # –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —á–∞–Ω–∫–æ–≤ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    current_chunk = f"üéÆ <b>–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–∏–¥–æ–∫</b>\n\n{line}\n"
                else:
                    chunks.append(line)
            else:
                current_chunk += line + '\n'
        
        if current_chunk:
            chunks.append(current_chunk.strip())
            
        return chunks
    
    async def send_deals_to_subscribers(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫–∏–¥–∫–∏ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º"""
        if not self.subscribers:
            logger.info("No subscribers to send deals to")
            return
        
        try:
            deals = await self.scraper.get_discounted_games()
            if not deals:
                logger.info("No deals found to send")
                return
            
            message = "üîî <b>–ù–æ–≤—ã–µ —Å–∫–∏–¥–∫–∏ –≤ Steam!</b>\n\n" + self.format_deals_message(deals)
            
            failed_sends = []
            for subscriber_id in self.subscribers.copy():
                try:
                    if len(message) > 4000:
                        chunks = self.split_message(message, 4000)
                        for chunk in chunks:
                            await self.bot.send_message(
                                chat_id=subscriber_id,
                                text=chunk,
                                parse_mode='HTML'
                            )
                    else:
                        await self.bot.send_message(
                            chat_id=subscriber_id,
                            text=message,
                            parse_mode='HTML'
                        )
                    logger.info(f"Sent deals to subscriber {subscriber_id}")
                except Exception as e:
                    logger.error(f"Failed to send to subscriber {subscriber_id}: {e}")
                    failed_sends.append(subscriber_id)
            
            # –£–¥–∞–ª—è–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
            for failed_id in failed_sends:
                self.subscribers.discard(failed_id)
            
            if failed_sends:
                self.save_subscribers()
                
        except Exception as e:
            logger.error(f"Error sending deals to subscribers: {e}")

    # ================== –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò ==================
    
    async def wishlist_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /wishlist - –∞–Ω–∞–ª–∏–∑ Steam Wishlist"""
        user_id = update.effective_user.id
        user = update.effective_user
        self.db.add_user(user_id, user.username, user.first_name, user.last_name)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã (—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å)
        if context.args:
            profile_url = ' '.join(context.args)
            await self._process_wishlist(update, profile_url)
        else:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
            message = """
üíù <b>–ê–Ω–∞–ª–∏–∑ Steam Wishlist</b>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à <b>–ø—É–±–ª–∏—á–Ω—ã–π</b> Steam-–ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫–∏–¥–æ–∫ –Ω–∞ –∏–≥—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–µ–º–æ–≥–æ.

üìù <b>–ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:</b>
‚Ä¢ https://steamcommunity.com/id/–≤–∞—à_–Ω–∏–∫
‚Ä¢ https://steamcommunity.com/profiles/76561198XXXXXXXXX

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ü—Ä–æ—Ñ–∏–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º, –∞ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–µ–º–æ–≥–æ - –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.

üí° <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
–û—Ç–ø—Ä–∞–≤—å—Ç–µ: /wishlist https://steamcommunity.com/id/–≤–∞—à_–Ω–∏–∫
            """
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
            self.set_user_state(user_id, 'waiting_for_wishlist_url')
            
            await update.message.reply_text(message, parse_mode='HTML')
    
    async def _process_wishlist(self, update: Update, profile_url: str):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ wishlist"""
        user_id = update.effective_user.id
        
        await update.message.reply_text("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à Steam Wishlist... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.")
        
        try:
            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            self.clear_user_state(user_id)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL
            if not ('steamcommunity.com/id/' in profile_url or 'steamcommunity.com/profiles/' in profile_url):
                await update.message.reply_text(
                    "‚ùå <b>–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤ –æ–¥–Ω–æ–º –∏–∑ —Ñ–æ—Ä–º–∞—Ç–æ–≤:\n"
                    "‚Ä¢ https://steamcommunity.com/id/–≤–∞—à_–Ω–∏–∫\n"
                    "‚Ä¢ https://steamcommunity.com/profiles/76561198XXXXXXXXX",
                    parse_mode='HTML'
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–∫–∏–¥–∫–∏ –∏–∑ wishlist
            discounted_games = await get_wishlist_discounts(profile_url)
            
            if not discounted_games:
                message = """
üòî <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ Wishlist:</b>

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–≥—Ä—ã —Å–æ —Å–∫–∏–¥–∫–∞–º–∏ –≤ –≤–∞—à–µ–º Wishlist.

<b>–ù–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>
‚Ä¢ üîí <b>Wishlist –ø—Ä–∏–≤–∞—Ç–Ω—ã–π</b> - –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø—É–±–ª–∏—á–Ω—ã–π, wishlist –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç
‚Ä¢ üìã <b>Wishlist –ø—É—Å—Ç–æ–π</b> - –≤ —Å–ø–∏—Å–∫–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –Ω–µ—Ç –∏–≥—Ä
‚Ä¢ üí∞ <b>–ù–µ—Ç —Ç–µ–∫—É—â–∏—Ö —Å–∫–∏–¥–æ–∫</b> - –Ω–∞ –∏–≥—Ä—ã –∏–∑ wishlist —Å–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ü–∏–π
‚Ä¢ ‚è±Ô∏è <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Steam</b> - —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API

<b>üîß –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ wishlist:</b>
1. –ó–∞–π–¥–∏—Ç–µ –≤ Steam ‚Üí –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å
2. –ù–∞–∂–º–∏—Ç–µ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"
3. –í—ã–±–µ—Ä–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏"
4. –ù–∞–π–¥–∏—Ç–µ "–î–µ—Ç–∞–ª–∏ –∏–≥—Ä—ã" ‚Üí —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <b>"–ü—É–±–ª–∏—á–Ω—ã–µ"</b>
5. –ù–∞–π–¥–∏—Ç–µ "–°–ø–∏—Å–æ–∫ –∂–µ–ª–∞–µ–º–æ–≥–æ" ‚Üí —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <b>"–ü—É–±–ª–∏—á–Ω—ã–π"</b>

<b>üéØ –í–∞–∂–Ω–æ:</b> Steam –∏–º–µ–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è:
‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—è (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º)
‚Ä¢ –î–µ—Ç–∞–ª–µ–π –∏–≥—Ä (–±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –≤—Ä–µ–º—è –≤ –∏–≥—Ä–∞—Ö)
‚Ä¢ –°–ø–∏—Å–∫–∞ –∂–µ–ª–∞–µ–º–æ–≥–æ (wishlist)

<b>üí° –ß—Ç–æ –µ—â–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å:</b>
‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ wishlist –µ—Å—Ç—å –∏–≥—Ä—ã
‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 10-15 –º–∏–Ω—É—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—É–±–ª–∏—á–Ω—ã–π —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ (–±–µ–∑ –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç)

<b>üîó –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:</b>
Steam ‚Üí –ü—Ä–æ—Ñ–∏–ª—å ‚Üí –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
                """
                await update.message.reply_text(message, parse_mode='HTML')
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            message = f"üíù <b>–°–∫–∏–¥–∫–∏ –≤ –≤–∞—à–µ–º Steam Wishlist ({len(discounted_games)} –∏–≥—Ä):</b>\n\n"
            
            for game in discounted_games[:15]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 15 –∏–≥—Ä
                discount = game.get('discount_percent', 0)
                name = game.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞')
                final_price = game.get('final_formatted', '')
                initial_price = game.get('initial_formatted', '')
                url = game.get('url', '')
                
                # –≠–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Å–∫–∏–¥–∫–∏
                if discount >= 75:
                    emoji = "üî•"
                elif discount >= 50:
                    emoji = "‚ö°"
                elif discount >= 25:
                    emoji = "üí•"
                else:
                    emoji = "üí∞"
                
                message += f"{emoji} <b>{name}</b>\n"
                message += f"üí∏ –°–∫–∏–¥–∫–∞: <b>-{discount}%</b>\n"
                
                if initial_price and final_price:
                    message += f"üí∞ <s>{initial_price}</s> ‚Üí <b>{final_price}</b>\n"
                
                if url:
                    message += f"üîó <a href='{url}'>–ö—É–ø–∏—Ç—å –≤ Steam</a>\n"
                
                message += "\n"
            
            if len(discounted_games) > 15:
                message += f"üí° <i>–ò –µ—â–µ {len(discounted_games) - 15} –∏–≥—Ä —Å–æ —Å–∫–∏–¥–∫–∞–º–∏...</i>\n"
            
            message += "\nüéØ <i>–£—Å–ø–µ–π—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–∫—Ü–∏–π!</i>"
            
            # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if len(message) > 4000:
                chunks = self.split_message(message, 4000)
                for chunk in chunks:
                    await update.message.reply_text(chunk, parse_mode='HTML', disable_web_page_preview=True)
            else:
                await update.message.reply_text(message, parse_mode='HTML', disable_web_page_preview=True)
                
        except Exception as e:
            logger.error(f"Error processing wishlist: {e}")
            error_message = """
‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ Wishlist</b>

–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.

<b>–ß—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å:</b>
‚Ä¢ ‚è±Ô∏è –ü–æ–¥–æ–∂–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
‚Ä¢ üîó –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
‚Ä¢ üîí –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å –∏ wishlist –ø—É–±–ª–∏—á–Ω—ã–µ
‚Ä¢ üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏ (ID –≤–º–µ—Å—Ç–æ –Ω–∏–∫–Ω–µ–π–º–∞ –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç)

üí¨ –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞.
            """
            await update.message.reply_text(error_message, parse_mode='HTML')
    
    
    async def ai_recommendations_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /recommend - AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–≥—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ wishlist –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
        user_id = update.effective_user.id
        user = update.effective_user
        self.db.add_user(user_id, user.username, user.first_name, user.last_name)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if not AI_RECOMMENDATIONS_ENABLED:
            await update.message.reply_text("ü§ñ –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω –ª–∏ wishlist –≤ –∫–æ–º–∞–Ω–¥–µ
        if context.args:
            profile_url = ' '.join(context.args)
            await self._process_wishlist_ai_recommendations(update, profile_url)
        else:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ wishlist
            message = """
ü§ñ <b>–ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–≥—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ Steam Wishlist</b>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Steam –ø—Ä–æ—Ñ–∏–ª—å, –∏ –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–µ–º–æ–≥–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã!

üìù <b>–ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:</b>
‚Ä¢ https://steamcommunity.com/profiles/76561198000000000
‚Ä¢ https://steamcommunity.com/id/your_username

üîç <b>–ß—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ò–ò:</b>
‚Ä¢ –ñ–∞–Ω—Ä—ã –∏–≥—Ä –≤ –≤–∞—à–µ–º wishlist
‚Ä¢ –í–∞—à–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–≥—Ä Steam
‚Ä¢ –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–µ –≤ –∏–≥—Ä–∞—Ö
‚Ä¢ –ò–≥—Ä–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
‚Ä¢ –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å—Ç–∏–ª—å –∏–≥—Ä
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–≥—Ä (—Ç–µ–º–Ω—ã–µ, –≤–µ—Å–µ–ª—ã–µ –∏ —Ç.–¥.)

üéØ <b>–ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ:</b>
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–≥—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –∏–≥—Ä–æ–≤—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ, –ø–æ—á–µ–º—É –∫–∞–∂–¥–∞—è –∏–≥—Ä–∞ –≤–∞–º –ø–æ–¥–æ–π–¥–µ—Ç
‚Ä¢ –£—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ –∏–≥—Ä–∞—Ö –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤

üí° <i>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–∏ wishlist –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–≥—Ä –ø—É–±–ª–∏—á–Ω—ã–µ!</i>
            """
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è wishlist
            self.set_user_state(user_id, 'waiting_for_wishlist_ai')
            
            await update.message.reply_text(message, parse_mode='HTML')
    
    async def _process_wishlist_ai_recommendations(self, update: Update, profile_url: str):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ wishlist –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
        user_id = update.effective_user.id
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.clear_user_state(user_id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loading_message = await update.message.reply_text("ü§ñ –ó–∞–≥—Ä—É–∂–∞—é –≤–∞—à wishlist –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–≥—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 2-3 –º–∏–Ω—É—Ç—ã.")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ wishlist
            from steam_wishlist import SteamWishlistParser
            
            wishlist_games = []
            owned_games = []
            
            # –ü–æ–ª—É—á–∞–µ–º wishlist
            try:
                async with SteamWishlistParser() as parser:
                    steam_id = parser.extract_steam_id(profile_url)
                    if not steam_id:
                        await loading_message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å Steam ID –∏–∑ —Å—Å—ã–ª–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏.")
                        return
                    
                    steam_id64 = await parser.resolve_steam_id(steam_id)
                    if steam_id64:
                        wishlist_games = await parser.get_wishlist_data(steam_id64)
                
                await loading_message.edit_text(f"üìã Wishlist –∑–∞–≥—Ä—É–∂–µ–Ω ({len(wishlist_games)} –∏–≥—Ä). –ó–∞–≥—Ä—É–∂–∞—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–≥—Ä...")
            
            except Exception as e:
                logger.warning(f"Could not load wishlist: {e}")
                await loading_message.edit_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å wishlist. –ü–æ–ø—Ä–æ–±—É—é –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–≥—Ä...")
            
            # –ü–æ–ª—É—á–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–≥—Ä
            try:
                owned_games = await get_steam_library(profile_url, limit=30)
                
                if owned_games:
                    total_games = len(wishlist_games) + len(owned_games)
                    await loading_message.edit_text(f"ÔøΩ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: wishlist ({len(wishlist_games)} –∏–≥—Ä) + –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ ({len(owned_games)} –∏–≥—Ä) = {total_games} –∏–≥—Ä. –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç...")
                else:
                    if not wishlist_games:
                        await loading_message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∏ wishlist, –Ω–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–≥—Ä. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å –ø—É–±–ª–∏—á–Ω—ã–π.")
                        return
                    else:
                        await loading_message.edit_text(f"üìã –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–æ wishlist –∑–∞–≥—Ä—É–∂–µ–Ω ({len(wishlist_games)} –∏–≥—Ä). –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç...")
            
            except Exception as e:
                logger.warning(f"Could not load library: {e}")
                if not wishlist_games:
                    await loading_message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø—É–±–ª–∏—á–Ω—ã–µ.")
                    return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            total_games = len(wishlist_games) + len(owned_games)
            if total_games < 3:
                await loading_message.edit_text("üìã –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–≥—Ä –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∏–≥—Ä –≤ wishlist –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–≥—Ä.")
                return
                
            # –ü–æ–ª—É—á–∞–µ–º –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            ai_result = await get_ai_game_recommendations(
                wishlist_games, 
                owned_games,
                OPENROUTER_API_KEY, 
                AI_MAX_RECOMMENDATIONS
            )
            
            if not ai_result['success']:
                error_msg = ai_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                await loading_message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞: {error_msg}")
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            await self._send_ai_recommendations_response(update, ai_result, loading_message)
            
        except Exception as e:
            logger.error(f"Error in AI recommendations: {e}")
            await loading_message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def _send_ai_recommendations_response(self, update: Update, ai_result: dict, loading_message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç —Å –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏"""
        try:
            recommendations = ai_result['recommendations']
            analysis = ai_result['analysis']
            total_wishlist = ai_result['total_wishlist_games']
            total_owned = ai_result.get('total_owned_games', 0)
            total_analyzed = ai_result.get('total_games_analyzed', total_wishlist)
            
            # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"ü§ñ <b>–ò–ò-–∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ Steam –ø—Ä–æ—Ñ–∏–ª—è</b>\n\n"
            message += f"üìä <b>–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏–≥—Ä:</b> {total_analyzed}\n"
            message += f"   üíù Wishlist: {total_wishlist} –∏–≥—Ä\n"
            if total_owned > 0:
                message += f"   üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞: {total_owned} –∏–≥—Ä\n"
            message += "\n"
            
            # –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
            if analysis:
                if 'top_genres' in analysis and analysis['top_genres']:
                    genres = ', '.join(analysis['top_genres'][:3])
                    message += f"üéÆ <b>–í–∞—à–∏ –ª—é–±–∏–º—ã–µ –∂–∞–Ω—Ä—ã:</b> {genres}\n"
                
                if 'preferred_mechanics' in analysis and analysis['preferred_mechanics']:
                    mechanics = ', '.join(analysis['preferred_mechanics'][:3])
                    message += f"‚öôÔ∏è <b>–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏:</b> {mechanics}\n"
                
                if 'gaming_style' in analysis:
                    style = analysis['gaming_style'][:150]
                    message += f"üéØ <b>–í–∞—à —Å—Ç–∏–ª—å –∏–≥—Ä—ã:</b> {style}\n"
                
                if 'analysis_summary' in analysis:
                    summary = analysis['analysis_summary'][:200]
                    message += f"\nüí≠ <b>–ê–Ω–∞–ª–∏–∑ –ò–ò:</b> {summary}\n"
                
                message += "\n"
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            if recommendations:
                message += f"üéØ <b>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ({len(recommendations)}):</b>\n\n"
                
                for i, rec in enumerate(recommendations[:6], 1):
                    name = rec.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞')
                    description = rec.get('description', '')[:120]
                    reason = rec.get('reason', '')[:120]
                    price = rec.get('estimated_price', '–¶–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')
                    similarity = rec.get('similarity_score', 0)
                    
                    # –≠–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                    if similarity >= 90:
                        emoji = "üî•"
                    elif similarity >= 85:
                        emoji = "‚≠ê"  
                    else:
                        emoji = "‚ú®"
                    
                    message += f"{emoji} <b>{i}. {name}</b> ({similarity}% —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)\n"
                    if description:
                        message += f"üìù {description}\n"
                    if reason:
                        message += f"üí° <i>{reason}</i>\n"
                    if price != '–¶–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞':
                        message += f"üí∞ {price}\n"
                    message += "\n"
            else:
                message += "üòî –ò–ò –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n\n"
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            message += "ÔøΩ <b>–•–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ —Å–∫–∏–¥–∫–∏?</b>\n"
            message += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /wishlist —Å —Ç–æ–π –∂–µ —Å—Å—ã–ª–∫–æ–π –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∫–∏–¥–æ–∫ –Ω–∞ –∏–≥—Ä—ã –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–µ–º–æ–≥–æ!"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–æ—Å—å
            if total_owned > 0:
                message += f"\n\nüí° –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∞—à wishlist, –Ω–æ –∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–≥—Ä!"
            
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
            if len(message) > 4000:
                message = message[:3900] + "\n\n... <i>–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∫—Ä–∞—â–µ–Ω–æ</i>"
            
            await loading_message.edit_text(message, parse_mode='HTML')
            
        except Exception as e:
            logger.error(f"Error sending AI recommendations response: {e}")
            await loading_message.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.")
    
    async def _process_ai_recommendations(self, update: Update, favorite_games: List[str]):
        """–°—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ wishlist-–∞–Ω–∞–ª–∏–∑"""
        message = """
ü§ñ <b>–ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ò–ò-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π!</b>

–¢–µ–ø–µ—Ä—å –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à Steam Wishlist –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /recommend
–ò –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Steam –ø—Ä–æ—Ñ–∏–ª—å.

–≠—Ç–æ –¥–∞—Å—Ç –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏! üéØ
        """
        await update.message.reply_text(message, parse_mode='HTML')

    async def handle_text_messages_conditionally(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è"""
        user_id = update.effective_user.id
        
        # –û—á–∏—â–∞–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.cleanup_expired_states()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∞
        if user_id not in self.user_states:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            return
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —Ä–∞–Ω—å—à–µ
        await self.handle_text_messages(update, context)

    async def handle_text_messages(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è)"""
        user_id = update.effective_user.id
        
        # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        state = self.user_states[user_id]
        message_text = update.message.text.strip()
        
        try:
            if state == 'waiting_for_wishlist_url':
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ Steam –ø—Ä–æ—Ñ–∏–ª—å
                if 'steamcommunity.com/' in message_text:
                    await self._process_wishlist(update, message_text)
                else:
                    await update.message.reply_text(
                        "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤–∏–¥–∞:\n"
                        "https://steamcommunity.com/id/–≤–∞—à_–Ω–∏–∫\n"
                        "–∏–ª–∏\n"
                        "https://steamcommunity.com/profiles/76561198XXXXXXXXX"
                    )
            
            elif state == 'waiting_for_wishlist_ai':
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Å—ã–ª–∫—É –¥–ª—è –ò–ò-–∞–Ω–∞–ª–∏–∑–∞ wishlist
                if 'steamcommunity.com/' in message_text:
                    await self._process_wishlist_ai_recommendations(update, message_text)
                else:
                    await update.message.reply_text(
                        "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤–∏–¥–∞:\n"
                        "https://steamcommunity.com/id/–≤–∞—à_–Ω–∏–∫\n"
                        "–∏–ª–∏\n"
                        "https://steamcommunity.com/profiles/76561198XXXXXXXXX"
                    )
            
            elif state == 'waiting_for_favorite_games':
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö –∏–≥—Ä
                # –ü–∞—Ä—Å–∏–º –∏–≥—Ä—ã, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏
                favorite_games = [game.strip() for game in message_text.split(',')]
                if len(favorite_games) < 2:
                    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç—å –ø–æ –¥—Ä—É–≥–∏–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º
                    separators = [';', '\n', ' –∏ ', ' and ']
                    for sep in separators:
                        if sep in message_text:
                            favorite_games = [game.strip() for game in message_text.split(sep)]
                            break
                
                if len(favorite_games) < 2:
                    await update.message.reply_text(
                        "üòî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ö–æ—Ç—è –±—ã 2 –∏–≥—Ä—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.\n"
                        "–†–∞–∑–¥–µ–ª–∏—Ç–µ –∏—Ö –∑–∞–ø—è—Ç—ã–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: The Witcher 3, Skyrim, Cyberpunk 2077"
                    )
                    return
                
                await self._process_ai_recommendations(update, favorite_games)
                
        except Exception as e:
            logger.error(f"Error handling text message: {e}")
            self.clear_user_state(user_id)
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –∑–∞–Ω–æ–≤–æ.")

    # ================== –ö–û–ù–ï–¶ –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô ==================
    
    def run_scheduler(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        schedule.every(6).hours.do(lambda: asyncio.run(self.send_deals_to_subscribers()))
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∏—Å—Ç–∫—É –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        schedule.every(5).minutes.do(self.cleanup_expired_states)
        
        while True:
            schedule.run_pending()
            time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–∫–∏–¥–æ–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        scheduler_thread = threading.Thread(target=self.run_scheduler, daemon=True)
        scheduler_thread.start()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –¥–∞–π–¥–∂–µ—Å—Ç–∞
        self.start_scheduler()
        
        logger.info("Starting bot...")
        self.application.run_polling()

if __name__ == "__main__":
    # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
    BOT_TOKEN = "7915606832:AAGLp_s79kuESeGZPRClXybqEAj65TzAn_E"
    
    if not BOT_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN")
        print("–ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∫–æ–¥, —É–∫–∞–∑–∞–≤ —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é")
        exit(1)
    
    bot = SteamDiscountBot(BOT_TOKEN)
    bot.run()
